steps:
# This step deploys the new version of our container image
# in the hello-cloudbuild Kubernetes Engine cluster - TEST
# We don't have enough quota
# - name: 'gcr.io/cloud-builders/kubectl'
#   id: Deploy
#   args:
#   - 'apply'
#   - '-f'
#   - 'spoon-backend'
#   - '-f'
#   - 'spoon-frontend'
#   - '-f'
#   - 'spoon-admin'
#   - '-f'
#   - 'mongodb'
#   env:
#   - 'CLOUDSDK_COMPUTE_ZONE=us-central1-c'
#   - 'CLOUDSDK_CONTAINER_CLUSTER=projector-test'

# Access the id_github file from Secret Manager
- name: gcr.io/cloud-builders/gcloud
  entrypoint: 'bash'
  args: [ '-c', 'gcloud secrets versions access latest --secret=github2 > /root/.ssh/id_github' ]
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Set up git with key and domain
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    chmod 600 /root/.ssh/id_github
    cat <<EOF >/root/.ssh/config
    Hostname github.com
    IdentityFile /root/.ssh/id_github
    EOF
    ssh-keyscan -t rsa github.com > /root/.ssh/known_hosts
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# This step copies the applied manifest to the production branch
# The COMMIT_SHA variable is automatically
# replaced by Cloud Build.
- name: 'gcr.io/cloud-builders/git'
  id: Copy to production branch
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    set -x && \
    # Configure Git to create commits with Cloud Build's service account
    git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)') && \
    # Switch to the production branch and copy the yaml file from the candidate branch
    git fetch origin production && git checkout production && \
    git checkout $COMMIT_SHA spoon-admin/* && \
    git checkout $COMMIT_SHA spoon-backend/* && \
    git checkout $COMMIT_SHA spoon-frontend/* && \
    git checkout $COMMIT_SHA mongodb/* && \
    git checkout $COMMIT_SHA cloudbuild.yaml && \
    # Commit the yaml file with a descriptive commit message
    git commit -m "Manifest from commit $COMMIT_SHA
    $(git log --format=%B -n 1 $COMMIT_SHA)" && \
    # Push the changes back to Cloud Source Repository
    git push git@github.com:TheLittleSpoon/environment.git production
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# This step deploys the new version of our container image
# in the hello-cloudbuild Kubernetes Engine cluster - Prod
- name: 'gcr.io/cloud-builders/kubectl'
  id: Deploy - Prod
  args:
  - 'apply'
  - '-f'
  - 'spoon-backend'
  - '-f'
  - 'spoon-frontend'
  - '-f'
  - 'spoon-admin'
  - '-f'
  - 'mongodb'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-c'
  - 'CLOUDSDK_CONTAINER_CLUSTER=projector'